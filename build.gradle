description = "Collection of add-ons for Tapestry 5"

tapestryVersion = "5.3.8"

if (!project.hasProperty('deployUserName')) deployUserName = '*UNSET-USERNAME*'
if (!project.hasProperty('deployPassword')) deployPassword = '*UNSET-PASSWORD*'


apply plugin: 'idea'

subprojects {
    apply plugin: 'java'
    apply plugin: 'groovy' // mostly for testing
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'maven-publish'
    apply plugin: 'project-report'
    
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    
    version = '1.2-SNAPSHOT'

    group = 'com.howardlewisship'
    
  repositories {
    allowInsecureProtocol = true
    mavenCentral()

    // All things JBoss/Javassist/Hibernate
    maven { url "https://repository.jboss.org/nexus/content/repositories/releases/" }

    // For the Kaptcha library
    maven { url "https://howardlewisship.com/repository/" }

    // Latest preview packages
    maven { url "https://repository.apache.org/content/groups/staging" }

    maven { url "https://repository.apache.org/snapshots/" }
    maven { url "https://repository.apache.org/content/groups/public/" }

  }
    
    configurations {
        deployerJars
        provided
    }

    // See http://jira.codehaus.org/browse/GRADLE-784
    
    sourceSets {
      main { 
        compileClasspath += configurations.provided 
        allowInsecureProtocol = true
      }
    }
    
    dependencies {
        implementation "org.apache.tapestry:tapestry-core:$tapestryVersion"        
        testImplementation "org.apache.tapestry:tapestry-test:$tapestryVersion"        
        testImplementation "org.easymock:easymock:3.0"
        implementation "org.codehaus.groovy:groovy-all:1.7.4"
        
        deployerJars "org.apache.maven.wagon:wagon-ftp:1.0-beta-2"        
    }
    
    test {
        useTestNG()
        
        options.suites("src/test/conf/testng.xml")
    }
    
    task sourcesJar(type: Jar, dependsOn:classes) {
       archiveClassifier = 'sources'
       from sourceSets.main.allSource
    }

    artifacts {
       archives sourcesJar
    }    

// deprecated    
//     uploadArchives {
//         repositories.mavenDeployer {
//             configuration = configurations.deployerJars
//             // deployUserName and deployPassword should be specified in ~/.gradle/gradle.properties
//             snapshotRepository(url: "ftp://howardlewisship.com/snapshot-repository") {
//               authentication(userName: deployUserName, password: deployPassword)
//             }
//             
//         }
//     }
  publishing {
    publications {
      mavenJava(MavenPublication) {
        from components.java
      }
    }
    repositories {
      maven {
        url "ftp://howardlewisship.com/snapshot-repository"
        credentials {
          username deployUserName
          password deployPassword
        }
      }
    }
  }
    
// deprecated
//     ideaModule {
//       scopes.PROVIDED.plus += configurations.provided
//       jdkName "inherited"
//     }

  idea {
    module {
      // Add dependencies to the module
      if (configurations.findByName('provided') != null) {
        inheritOutputDirs = true
        dependencies {
          configurations.provided.each { dep ->
            library {
              name = "${dep group}:${dep name}:${dep version}"
            }
          }
        }
      }
    }

  }


}
